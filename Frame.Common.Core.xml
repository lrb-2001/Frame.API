<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Frame.Common.Core</name>
    </assembly>
    <members>
        <member name="T:Frame.Common.Core.Captcha.General.GeneralCaptcha">
            <summary>
            验证码
            </summary>
        </member>
        <member name="F:Frame.Common.Core.Captcha.General.GeneralCaptcha._captcha">
            <summary>
            验证码
            </summary>
        </member>
        <member name="M:Frame.Common.Core.Captcha.General.GeneralCaptcha.#ctor(Frame.Common.Core.Manager.ICacheManager,Lazy.Captcha.Core.ICaptcha)">
            <summary>
            构造函数.
            </summary>
            <param name="cacheManager"></param>
            <param name="captcha"></param>
        </member>
        <member name="M:Frame.Common.Core.Captcha.General.GeneralCaptcha.VerCaptcha(System.String,System.String)">
            <summary>
            验证验证码
            </summary>
            <param name="codeID"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Captcha.General.GeneralCaptcha.CreateCaptcha">
            <summary>
             算式验证码.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Frame.Common.Core.Captcha.General.GeneralCaptcha.CreateCaptchaImage(System.Int32,System.Int32,System.Int32)">
            <summary>
            常规验证码.
            </summary>
            <param name="timestamp">时间戳.</param>
            <param name="width">宽度.</param>
            <param name="height">高度.</param>
            <param name="length">长度.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Captcha.General.GeneralCaptcha.Draw(System.Int32,System.Int32,System.Int32)">
            <summary>
            画.
            </summary>
            <param name="timestamp">时间抽.</param>
            <param name="width">宽度.</param>
            <param name="height">高度.</param>
            <param name="length">长度.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Captcha.General.GeneralCaptcha.SetCode(System.String,System.String,System.TimeSpan,System.Int64)">
            <summary>
            保存验证码缓存.
            </summary>
            <param name="codeId">验证码ID.</param>
            <param name="type">验证码类型.</param>
            <param name="code">验证码.</param>
            <param name="timeSpan">过期时间.</param>
        </member>
        <member name="T:Frame.Common.Core.Captcha.General.IGeneralCaptcha">
            <summary>
            常规验证码.
            </summary>
        </member>
        <member name="M:Frame.Common.Core.Captcha.General.IGeneralCaptcha.VerCaptcha(System.String,System.String)">
            <summary>
            验证验证码
            </summary>
            <param name="codeID"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Captcha.General.IGeneralCaptcha.CreateCaptchaImage(System.Int32,System.Int32,System.Int32)">
            <summary>
            创建验证码图片.
            </summary>
            <param name="timestamp">时间戳.</param>
            <param name="width">宽度.</param>
            <param name="height">高度.</param>
            <param name="length">长度.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Captcha.General.IGeneralCaptcha.CreateCaptcha">
            <summary>
            创建验证码.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Frame.Common.Core.Files.FileManager">
            <summary>
            文件管理
            </summary>
        </member>
        <member name="M:Frame.Common.Core.Files.FileManager.GetPathByType(System.String)">
            <summary>
            根据类型获取文件存储路径.
            </summary>
            <param name="type">文件类型.</param>
            <returns></returns>
        </member>
        <member name="T:Frame.Common.Core.Files.IFileManager">
            <summary>
            文件管理
            </summary>
        </member>
        <member name="M:Frame.Common.Core.Files.IFileManager.GetPathByType(System.String)">
            <summary>
            根据类型获取文件存储路径.
            </summary>
            <param name="type">文件类型.</param>
            <returns></returns>
        </member>
        <member name="T:Frame.Common.Core.Hub.OnlineUserHubInput">
            <summary>
            强制下线
            </summary>
        </member>
        <member name="T:Frame.Common.Core.Hub.IOnlineUserHub">
            <summary>
            在线用户集线器
            </summary>
        </member>
        <member name="M:Frame.Common.Core.Hub.IOnlineUserHub.OnlineUserList(Frame.Common.Core.Hub.OnlineUserList)">
            <summary>
            在线用户列表
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Hub.IOnlineUserHub.ForceOffline(System.Object)">
            <summary>
            强制下线
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Hub.IOnlineUserHub.PublicNotice(Frame.Model.System.SysNotice)">
            <summary>
            发布站内消息
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Hub.IOnlineUserHub.ReceiveMessage(System.Object)">
            <summary>
            接收消息
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Frame.Common.Core.Hub.OnlineUserHub">
            <summary>
            在线用户集线器
            </summary>
        </member>
        <member name="M:Frame.Common.Core.Hub.OnlineUserHub.OnConnectedAsync">
            <summary>
            连接
            </summary>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Hub.OnlineUserHub.OnDisconnectedAsync(System.Exception)">
            <summary>
            断开
            </summary>
            <param name="exception"></param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Hub.OnlineUserHub.ForceOffline(Frame.Common.Core.Hub.OnlineUserHubInput)">
            <summary>
            强制下线
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Hub.OnlineUserHub.ClientsSendMessage(Frame.Common.Core.Message.MessageInput)">
            <summary>
            前端调用发送方法（发送信息给某个人）
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Hub.OnlineUserHub.ClientsSendMessagetoAll(Frame.Common.Core.Message.MessageInput)">
            <summary>
            前端调用发送方法（发送信息给所有人）
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Hub.OnlineUserHub.ClientsSendMessagetoOther(Frame.Common.Core.Message.MessageInput)">
            <summary>
            前端调用发送方法（发送消息给除了发送人的其他人）
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Hub.OnlineUserHub.ClientsSendMessagetoUsers(Frame.Common.Core.Message.MessageInput)">
            <summary>
            前端调用发送方法（发送消息给某些人）
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:Frame.Common.Core.Job.OnlineUserJob">
            <summary>
            清理在线用户作业任务
            </summary>
        </member>
        <member name="T:Frame.Common.Core.Logging.DatabaseLoggingWriter">
            <summary>
            数据库日志写入器
            </summary>
        </member>
        <member name="M:Frame.Common.Core.Logging.DatabaseLoggingWriter.GetIpAddress(System.String)">
            <summary>
            解析IP地址
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="T:Frame.Common.Core.Logging.ElasticSearchLoggingWriter">
            <summary>
            ES日志写入器
            </summary>
        </member>
        <member name="T:Frame.Common.Core.Logging.ElasticSearchSetup">
            <summary>
            ES服务注册
            </summary>
        </member>
        <member name="T:Frame.Common.Core.Manager.CacheManager">
            <summary>
            缓存管理
            </summary>
        </member>
        <member name="M:Frame.Common.Core.Manager.CacheManager.#ctor(Microsoft.Extensions.Options.IOptions{Frame.Common.Cache.CacheOptions},System.Func{System.String,Furion.DependencyInjection.ISingleton,System.Object})">
            <summary>
            初始化一个<see cref="T:Frame.Common.Core.Manager.CacheManager"/>类型的新实例.
            </summary>
        </member>
        <member name="M:Frame.Common.Core.Manager.CacheManager.GetAllCacheKeys">
            <summary>
            获取所有缓存关键字.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Manager.CacheManager.GetAsync``1(System.String)">
            <summary>
            获取缓存.
            </summary>
            <typeparam name="T">对象.</typeparam>
            <param name="key">键.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Manager.CacheManager.Get(System.String)">
            <summary>
            获取缓存.
            </summary>
            <param name="key">键.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Manager.CacheManager.GetAsync(System.String)">
            <summary>
            获取缓存.
            </summary>
            <param name="key">键.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Manager.CacheManager.Get``1(System.String)">
            <summary>
            获取缓存.
            </summary>
            <typeparam name="T">对象.</typeparam>
            <param name="key">键.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Manager.CacheManager.GetCacheOutTime(System.String)">
            <summary>
            获取缓存过期时间.
            </summary>
            <param name="key">键.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Manager.CacheManager.Del(System.String)">
            <summary>
            删除指定关键字缓存.
            </summary>
            <param name="key">键.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Manager.CacheManager.DelAsync(System.String)">
            <summary>
            删除指定关键字缓存.
            </summary>
            <param name="key">键.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Manager.CacheManager.DelAsync(System.String[])">
            <summary>
            删除指定关键字数组缓存.
            </summary>
            <param name="key">键.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Manager.CacheManager.DelByPatternAsync(System.String)">
            <summary>
            删除某特征关键字缓存.
            </summary>
            <param name="key">键.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Manager.CacheManager.Set(System.String,System.Object)">
            <summary>
            设置缓存.
            </summary>
            <param name="key">键.</param>
            <param name="value">值.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Manager.CacheManager.Set(System.String,System.Object,System.TimeSpan)">
            <summary>
            设置缓存.
            </summary>
            <param name="key">键.</param>
            <param name="value">值.</param>
            <param name="timeSpan">过期时间.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Manager.CacheManager.SetAsync(System.String,System.Object)">
            <summary>
            设置缓存.
            </summary>
            <param name="key">键.</param>
            <param name="value">值.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Manager.CacheManager.SetAsync(System.String,System.Object,System.TimeSpan)">
            <summary>
            设置缓存.
            </summary>
            <param name="key">键.</param>
            <param name="value">值.</param>
            <param name="timeSpan">过期时间.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Manager.CacheManager.Incrby(System.String,System.Int64)">
            <summary>
            获取指定 key 的增量值.
            </summary>
            <param name="key">键.</param>
            <param name="incrBy">增量.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Manager.CacheManager.IncrbyAsync(System.String,System.Int64)">
            <summary>
            获取指定 key 的增量值.
            </summary>
            <param name="key">键.</param>
            <param name="incrBy">增量.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Manager.CacheManager.Exists(System.String)">
            <summary>
            检查给定 key 是否存在.
            </summary>
            <param name="key">键.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Manager.CacheManager.ExistsAsync(System.String)">
            <summary>
            检查给定 key 是否存在.
            </summary>
            <param name="key">键.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Manager.CacheManager.SetNx(System.String,System.Object,System.TimeSpan)">
            <summary>
            只有在 key 不存在时设置 key 的值.
            </summary>
            <param name="key">键.</param>
            <param name="value">值.</param>
            <param name="expire">有效期.</param>
        </member>
        <member name="M:Frame.Common.Core.Manager.CacheManager.SetNx(System.String,System.Object)">
            <summary>
            只有在 key 不存在时设置 key 的值.
            </summary>
            <param name="key">键.</param>
            <param name="value">值.</param>
        </member>
        <member name="T:Frame.Common.Core.Manager.ICacheManager">
            <summary>
            缓存管理抽象.
            </summary>
        </member>
        <member name="M:Frame.Common.Core.Manager.ICacheManager.GetAllCacheKeys">
            <summary>
            获取所有缓存关键字.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Manager.ICacheManager.Del(System.String)">
            <summary>
            删除指定关键字缓存.
            </summary>
            <param name="key">键.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Manager.ICacheManager.DelAsync(System.String)">
            <summary>
            删除指定关键字缓存.
            </summary>
            <param name="key">键.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Manager.ICacheManager.DelAsync(System.String[])">
            <summary>
            删除指定关键字数组缓存.
            </summary>
            <param name="key">键.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Manager.ICacheManager.DelByPatternAsync(System.String)">
            <summary>
            删除某特征关键字缓存.
            </summary>
            <param name="key">键.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Manager.ICacheManager.Set(System.String,System.Object)">
            <summary>
            设置缓存.
            </summary>
            <param name="key">键.</param>
            <param name="value">值.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Manager.ICacheManager.Set(System.String,System.Object,System.TimeSpan)">
            <summary>
            设置缓存.
            </summary>
            <param name="key">键.</param>
            <param name="value">值.</param>
            <param name="timeSpan">过期时间.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Manager.ICacheManager.SetAsync(System.String,System.Object)">
            <summary>
            设置缓存.
            </summary>
            <param name="key">键.</param>
            <param name="value">值.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Manager.ICacheManager.SetAsync(System.String,System.Object,System.TimeSpan)">
            <summary>
            设置缓存.
            </summary>
            <param name="key">键.</param>
            <param name="value">值.</param>
            <param name="timeSpan">过期时间.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Manager.ICacheManager.Incrby(System.String,System.Int64)">
            <summary>
            获取指定 key 的增量值.
            </summary>
            <param name="key">键.</param>
            <param name="incrBy">增量.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Manager.ICacheManager.IncrbyAsync(System.String,System.Int64)">
            <summary>
            获取指定 key 的增量值.
            </summary>
            <param name="key">键.</param>
            <param name="incrBy">增量.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Manager.ICacheManager.Get(System.String)">
            <summary>
            获取缓存.
            </summary>
            <param name="key">键.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Manager.ICacheManager.GetAsync(System.String)">
            <summary>
            获取缓存.
            </summary>
            <param name="key">键.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Manager.ICacheManager.Get``1(System.String)">
            <summary>
            获取缓存.
            </summary>
            <typeparam name="T">对象.</typeparam>
            <param name="key">键.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Manager.ICacheManager.GetAsync``1(System.String)">
            <summary>
            获取缓存.
            </summary>
            <typeparam name="T">对象.</typeparam>
            <param name="key">键.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Manager.ICacheManager.GetCacheOutTime(System.String)">
            <summary>
            获取缓存过期时间.
            </summary>
            <param name="key">键.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Manager.ICacheManager.Exists(System.String)">
            <summary>
            检查给定 key 是否存在.
            </summary>
            <param name="key">键.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Manager.ICacheManager.ExistsAsync(System.String)">
            <summary>
            异步检查给定 key 是否存在.
            </summary>
            <param name="key">键.</param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Manager.ICacheManager.SetNx(System.String,System.Object,System.TimeSpan)">
            <summary>
            只有在 key 不存在时设置 key 的值.
            </summary>
            <param name="key">键.</param>
            <param name="value">值.</param>
            <param name="expire">有效期.</param>
        </member>
        <member name="M:Frame.Common.Core.Manager.ICacheManager.SetNx(System.String,System.Object)">
            <summary>
            只有在 key 不存在时设置 key 的值.
            </summary>
            <param name="key">键.</param>
            <param name="value">值.</param>
        </member>
        <member name="T:Frame.Common.Core.Message.MessageInput">
            <summary>
            发送消息给除了发送人的其他人
            </summary>
        </member>
        <member name="P:Frame.Common.Core.Message.MessageInput.UserId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:Frame.Common.Core.Message.MessageInput.UserIds">
            <summary>
            用户ID列表
            </summary>
        </member>
        <member name="P:Frame.Common.Core.Message.MessageInput.Title">
            <summary>
            消息标题
            </summary>
        </member>
        <member name="P:Frame.Common.Core.Message.MessageInput.MessageType">
            <summary>
            消息类型
            </summary>
        </member>
        <member name="P:Frame.Common.Core.Message.MessageInput.Message">
            <summary>
            消息内容
            </summary>
        </member>
        <member name="T:Frame.Common.Core.Message.ISysMessageService">
            <summary>
            系统消息发送服务
            </summary>
        </member>
        <member name="M:Frame.Common.Core.Message.ISysMessageService.SendUser(Frame.Common.Core.Message.MessageInput)">
            <summary>
            发送消息给某个人
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Message.ISysMessageService.SendAllUser(Frame.Common.Core.Message.MessageInput)">
            <summary>
            发送消息给所有人
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Message.ISysMessageService.SendOtherUser(Frame.Common.Core.Message.MessageInput)">
            <summary>
            发送消息给除了发送人的其他人
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Message.ISysMessageService.SendUsers(Frame.Common.Core.Message.MessageInput)">
            <summary>
            发送消息给某些人
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Frame.Common.Core.Message.SysMessageService">
            <summary>
            系统消息发送服务
            </summary>
        </member>
        <member name="M:Frame.Common.Core.Message.SysMessageService.SendAllUser(Frame.Common.Core.Message.MessageInput)">
            <summary>
            发送消息给所有人
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Message.SysMessageService.SendOtherUser(Frame.Common.Core.Message.MessageInput)">
            <summary>
            发送消息给除了发送人的其他人
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Message.SysMessageService.SendUser(Frame.Common.Core.Message.MessageInput)">
            <summary>
            发送消息给某个人
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Message.SysMessageService.SendUsers(Frame.Common.Core.Message.MessageInput)">
            <summary>
            发送消息给某些人
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Frame.Common.Core.Message.SysMessageService.SendEmail(System.String)">
            <summary>
            发送邮件
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
    </members>
</doc>
